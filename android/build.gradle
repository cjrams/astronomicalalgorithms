buildscript {
	repositories {
		google()
		jcenter()
	}
	dependencies {
		classpath 'com.android.tools.build:gradle:3.4.1'
	}
}
allprojects {
	repositories {
		google()
		jcenter()
	}
}
apply plugin: 'com.android.library'

android {
	compileSdkVersion 28
	buildToolsVersion '28.0.3'

	defaultConfig {
		minSdkVersion 16
		targetSdkVersion 28
		versionCode 2
		versionName '0.3.0'
		project.archivesBaseName = 'astronomicalalgorithms'
		testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	externalNativeBuild {
		cmake {
			path 'CMakeLists.txt'
		}
	}
}

task conanInstall {
	android.defaultConfig.ndk.abiFilters.each {
		def arch = it;
		def buildDir = new File("app/conan_build_" + arch)
		buildDir.mkdirs()

		// if you have problems running the command try to specify the absolute
		// path to conan (Known problem in MacOSX) /usr/local/bin
		def conan_path = ""; // "/usr/local/bin/"
		def cmd = conan_path + "conan install ../conanfile.txt --profile android_21_" + arch + "_clang"
		print(">> ${cmd} \n")

		def sout = new StringBuilder(), serr = new StringBuilder()
		def proc = cmd.execute(null, buildDir)

		proc.consumeProcessOutput(sout, serr)
		proc.waitFor()
		println "$sout $serr"
		if (proc.exitValue() != 0) {
			throw new Exception("out> $sout err> $serr" + "\nCommand: ${cmd}")
		}
	}
 }

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar'])
	androidTestImplementation 'com.android.support.test:runner:1.0.2'
	androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2', {
		exclude group: 'com.android.support', module: 'support-annotations'
	})
	testImplementation 'junit:junit:4.12'
}

ext {
	publishedGroupId = 'org.cjrams'
	libraryName = 'AstronomicalAlgorithms'
	artifact = 'astronomical-algorithms'
	libraryDescription = 'Astronomical algorithms for Android. Bases on PJ Naughter at http://www.naughter.com/aa.html'
	libraryVersion = '0.3.0'

	siteUrl = 'https://github.com/cjrams/astronomicalalgorithms'
    gitUrl = 'https://github.com/cjrams/astronomicalalgorithms.git'
}

apply from: 'android-release-aar.gradle'
